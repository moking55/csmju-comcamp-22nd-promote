import {
	sendNotificationToUser,
	type NotificationData
} from '$lib/firebase/actions/notificationAction';

import { getUserList } from '$lib/firebase/actions/userAction';
import { Timestamp, doc, updateDoc } from 'firebase/firestore';
import Delta from 'quill-delta';
import { mailSender, type MailData } from './micro-services/mail-service';
import { FirebaseError } from 'firebase/app';
import { initFirebase } from '$lib/firebase/config';

export async function evidenceLateSender() {
	try {
		const users = await getUserList();

		const lateSubmitter = users.filter((user) => {
			const lateSubmittedOn = {
				payment: user.assets.paymentReceiptSrc === null,
				parent: user.assets.parentPermissionSrc === null
			};

			if (lateSubmittedOn.payment || lateSubmittedOn.parent) {
				const now = Timestamp.now();
				const diffTime = Math.abs(now.seconds - user.created_at.seconds);
				const diffDays = Math.ceil(diffTime / (60 * 60 * 24));
				return diffDays >= 5;
			}
		});

		await Promise.all(
			lateSubmitter.map(async (user) => {
				const { config } = user;

				if (
					config.lateEvidenceSubmitted.timestampAfterChecked === null ||
					config.lateEvidenceSubmitted.timestampAfterChecked.seconds < Timestamp.now().seconds
				) {
					const now = Timestamp.now();
					const threeDaysInSeconds = 3 * 24 * 60 * 60; // 3 days in seconds
					const timestampAfterChecked = new Timestamp(
						now.seconds + threeDaysInSeconds,
						now.nanoseconds
					);

					const { db } = initFirebase();

					const userRef = doc(db, 'users', user.uId);
					await updateDoc(userRef, {
						config: {
							lateEvidenceSubmitted: {
								timestampAfterChecked
							}
						}
					});

					const lateSubmittedOn = {
						payment: user.assets.paymentReceiptSrc === null,
						parent: user.assets.parentPermissionSrc === null
					};

					const message = (topic: 'payment' | 'parent') => {
						return {
							title: `‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏™‡πà‡∏á${
								topic === 'parent' ? '‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á' : '‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞'
							} ‡∏ä‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î (5 ‡∏ß‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô)`,
							description: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á ${
								user.info.name
							} ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏û‡∏ß‡∏Å‡∏û‡∏µ‡πà "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏≤‡∏¢‡∏¢‡∏∏‡∏ß‡∏ä‡∏ô‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÅ‡∏°‡πà‡πÇ‡∏à‡πâ" ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö

‡∏û‡∏≠‡∏î‡∏µ‡∏û‡∏µ‡πà ‡πÜ ‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏ö‡∏ß‡πà‡∏≤ ${
			topic === 'parent' ? '‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á' : '‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞'
		} ‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏û‡∏ß‡∏Å‡∏û‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏à‡∏∂‡∏á‡∏Ç‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏ô‡πâ‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏û‡∏ß‡∏Å‡∏û‡∏µ‡πà ‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏û‡∏µ‡πà‡∏à‡∏∞‡∏Ç‡∏≠‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${timestampAfterChecked
								.toDate()
								.toLocaleDateString()} ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö

‡∏ã‡∏∂‡πà‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏≤‡∏¢‡∏¢‡∏∏‡∏ß‡∏ä‡∏ô‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÅ‡∏°‡πà‡πÇ‡∏à‡πâ ${'comcamp.csmju.com'} ‡πÉ‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢

‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡∏û‡∏µ‡πà‡πÇ‡∏≠‡∏° ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà 095-658-5160

‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö  ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏à facebook.com/CCCSMJU ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå ${'comcamp.csmju.com'} ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Ñ‡πà‡∏≤‡∏¢‡∏ô‡πä‡∏≤‡∏≤‡∏≤  üíöü§çüíõ`
						};
					};

					if (lateSubmittedOn.parent) {
						const notificationData: NotificationData = {
							userUid: user.uId,
							toUserName: user.info.name,
							toUserEmail: user.info.contacts.contractEmail,
							title: message('parent').title,
							description: JSON.stringify(new Delta().insert(message('parent').description)),
							created: Timestamp.now()
						};

						const emailSender: MailData = {
							to: user.info.contacts.contractEmail,
							from: 'comcamp.22nd@gmail.com',
							subject: message('parent').title,
							text: message('parent').description
						};

						await sendNotificationToUser(notificationData);
						await mailSender(emailSender);
					}

					if (lateSubmittedOn.payment) {
						const notificationData: NotificationData = {
							userUid: user.uId,
							toUserName: user.info.name,
							toUserEmail: user.info.contacts.contractEmail,
							title: message('payment').title,
							description: JSON.stringify(new Delta().insert(message('parent').description)),
							created: Timestamp.now()
						};
						const emailSender: MailData = {
							to: user.info.contacts.contractEmail,
							from: 'comcamp.22nd@gmail.com',
							subject: message('payment').title,
							text: message('payment').description
						};

						await sendNotificationToUser(notificationData);
						await mailSender(emailSender);
					}
				}
			})
		);
	} catch (error) {
		if (import.meta.env.VITE_DEV_MODE === 'true') console.error(error);
		if (error instanceof FirebaseError) {
			throw error;
		}
		throw new Error(error as string);
	}
}
